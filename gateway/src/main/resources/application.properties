# Configure the SmallRye Kafka connector
kafka.bootstrap.servers=kafka:9092

mp.messaging.outgoing.orderCreated.connector=smallrye-kafka
mp.messaging.outgoing.orderCreated.topic=orderCreated
mp.messaging.outgoing.orderCreated.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer


#mp.messaging.incoming.orderCreated.value.deserializer=Data.OrderDeserializer

# configure the MongoDB client for a replica set of two nodes
quarkus.mongodb.connection-string = mongodb://mongo:27017
quarkus.mongodb.database = Proto1

quarkus.jaeger.service-name=Gateway 
quarkus.jaeger.sampler-type=const
quarkus.jaeger.sampler-param=1
quarkus.jaeger.agent-host-port=jaeger:6831
quarkus.jaeger.sampler-manager-host-port=jaeger:5778

quarkus.log.handler.gelf.enabled=true
quarkus.log.handler.gelf.host=graylog
quarkus.log.handler.gelf.port=12201

quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n 

quarkus.swagger-ui.always-include=true

product-microservice-api/mp-rest/url=http://product-microservice:8080
product-microservice-api/mp-rest/scope=javax.inject.Singleton

order-microservice-api/mp-rest/url=http://order-microservice:8080
order-microservice-api/mp-rest/scope=javax.inject.Singleton

dueout-microservice-api/mp-rest/url=http://dueout-microservice:8080
dueout-microservice-api/mp-rest/scope=javax.inject.Singleton


